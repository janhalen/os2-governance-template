name: Issue to Markdown

on:
  issues:
    types: [opened, edited]
    
permissions:
  contents: write

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Save GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT" > event.json

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyjq

      - name: Convert issue to markdown and evaluate compliance
        run: |
          python -c "
          import json
          import re

        # Load the issue body from the GitHub event
        with open('event.json') as f:
            data = json.load(f)
        issue_body = data['event']['issue']['body']

        # Split the issue body into sections by headers
        sections = re.split(r'(### .*\n)', issue_body)

        # Process each section
        for i in range(1, len(sections), 2):
            # Check if all checkboxes are checked
            if re.search(r'- \[[xX ]\]', sections[i]):
                # Not compliant, apply strikethrough to the section header
                sections[i-1] = '~~' + sections[i-1].rstrip() + '~~\n'
            else:
                # Compliant, add "Compliant" to the section header
                sections[i-1] = sections[i-1].rstrip() + ' (Compliant)\n'

        # Join the sections back together
        new_issue_body = ''.join(sections)

        # Write the new issue body to a markdown file
        with open('issue.md', 'w') as f:
          f.write(new_issue_body)
          "

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Convert issue to markdown"
          git push
